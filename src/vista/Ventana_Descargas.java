/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.sql.*;
import conexion.Conexion;
import controlador.Ctrl_Usuario;
import java.awt.Font;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import controlador.TicketPDFGenerator;

/**
 *
 * @author andre
 */
public class Ventana_Descargas extends javax.swing.JFrame {

    /**
     * Creates new form Ventana_Reservas
     */
    public Ventana_Descargas() {
        initComponents();
        initTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaTickets = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tablaTickets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Num Factura", "Monto", "Fecha", "Hora", "Evento", "Direccion", "Cantidad", "Localidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaTickets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTicketsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaTickets);
        if (tablaTickets.getColumnModel().getColumnCount() > 0) {
            tablaTickets.getColumnModel().getColumn(0).setResizable(false);
            tablaTickets.getColumnModel().getColumn(1).setResizable(false);
            tablaTickets.getColumnModel().getColumn(2).setResizable(false);
            tablaTickets.getColumnModel().getColumn(3).setResizable(false);
            tablaTickets.getColumnModel().getColumn(4).setResizable(false);
            tablaTickets.getColumnModel().getColumn(5).setResizable(false);
            tablaTickets.getColumnModel().getColumn(6).setResizable(false);
            tablaTickets.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Microsoft YaHei UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Descarga tus tickets Comprados");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1052, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 670, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tablaTicketsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTicketsMouseClicked
        int row = tablaTickets.getSelectedRow();
        if (row != -1) {
            // Obtener los datos de la fila seleccionada
            int idPago = (int) tablaTickets.getValueAt(row, 0);
            float montoTotal = (float) tablaTickets.getValueAt(row, 1);
            String fechaPago = (String) tablaTickets.getValueAt(row, 2);
            String horaPago = (String) tablaTickets.getValueAt(row, 3);
            String nombreEvento = (String) tablaTickets.getValueAt(row, 4);
            String direccionEvento = (String) tablaTickets.getValueAt(row, 5);
            int cantidadTiquetes = (int) tablaTickets.getValueAt(row, 6);
            String tipoLocalidad = (String) tablaTickets.getValueAt(row, 7);

            // Información del usuario activo
            Ctrl_Usuario ctrlUsuario = new Ctrl_Usuario();
            Usuario usuarioActivo = ctrlUsuario.obtenerUsuarioActivo();
            String nombreUsuario = usuarioActivo.getNombre();
            String apellidoUsuario = usuarioActivo.getApellido();

            // Llamar al método para generar el PDF del ticket
            TicketPDFGenerator pdfGenerator = new TicketPDFGenerator();
            pdfGenerator.generateTicketPDF(
                    nombreEvento,
                    fechaPago + " " + horaPago,
                    direccionEvento,
                    cantidadTiquetes,
                    tipoLocalidad,
                    nombreUsuario,
                    apellidoUsuario,
                    montoTotal
            );
        }
    }//GEN-LAST:event_tablaTicketsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana_Descargas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana_Descargas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana_Descargas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana_Descargas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana_Descargas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    public static javax.swing.JTable tablaTickets;
    // End of variables declaration//GEN-END:variables

    private void initTabla() {
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaTickets.getModel();
        modeloTabla.setRowCount(0);

        // Obtener el usuario activo
        Ctrl_Usuario ctrlUsuario = new Ctrl_Usuario();
        Usuario usuarioActivo = ctrlUsuario.obtenerUsuarioActivo();

        if (usuarioActivo != null) {
            int idUsuario = usuarioActivo.getIdUsuario();

            Connection cn = Conexion.conectar();
            try {
                // Consulta SQL para obtener los datos necesarios de las tablas de pagos y reservas
                String sql = "SELECT p.id_pago, p.monto_total, p.fecha_pago, p.hora_pago, "
                        + "e.nombre_evento, e.direccion, r.cantidad_tiquetes, l.tipo_localidad "
                        + "FROM Pagos p "
                        + "JOIN Reservas r ON p.reserva_id = r.reserva_id "
                        + "JOIN Eventos e ON r.evento_id = e.id_evento "
                        + "JOIN Localidades l ON r.localidad_id = l.id_localidad "
                        + "WHERE r.usuario_id = ?";

                PreparedStatement consulta = cn.prepareStatement(sql);
                consulta.setInt(1, idUsuario);
                ResultSet rs = consulta.executeQuery();
                while (rs.next()) {
                    int idPago = rs.getInt("id_pago");
                    float montoTotal = rs.getFloat("monto_total");
                    String fechaPago = rs.getString("fecha_pago");
                    String horaPago = rs.getString("hora_pago");
                    String nombreEvento = rs.getString("nombre_evento");
                    String direccionEvento = rs.getString("direccion");
                    int cantidadTiquetes = rs.getInt("cantidad_tiquetes");
                    String tipoLocalidad = rs.getString("tipo_localidad");

                    modeloTabla.addRow(new Object[]{
                        idPago,
                        montoTotal,
                        fechaPago,
                        horaPago,
                        nombreEvento,
                        direccionEvento,
                        cantidadTiquetes,
                        tipoLocalidad
                    });
                }
                cn.close();
            } catch (SQLException ex) {
                System.out.println("Error al obtener datos de la base de datos: " + ex.getMessage());
            }

            // Ajustar la altura de las filas para adaptarse al contenido
            tablaTickets.setRowHeight(30); // Puedes ajustar la altura según sea necesario

            // Establecer el estilo de la fuente para el título y la descripción
            tablaTickets.setFont(new Font("Arial", Font.BOLD, 14)); // Establecer la fuente en negrita con tamaño de 14 puntos

            // Establecer renderizadores personalizados para la alineación del texto
            DefaultTableCellRenderer topAlignedRenderer = new DefaultTableCellRenderer();
            topAlignedRenderer.setVerticalAlignment(SwingConstants.TOP);

        } else {
            // Mostrar un mensaje de error si no hay usuario activo
            JOptionPane.showMessageDialog(null, "No hay un usuario activo. Por favor inicie sesión.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
