/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import controlador.Ctrl_Usuario;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;

/**
 *
 * @author TOR
 */
public class InternalFrame_GestionarUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalFrame_GestionarUsuarios
     */
    private int idusuario;

    public InternalFrame_GestionarUsuarios() {
        initComponents();
        this.cargartablausuarios();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_fondoGestionarUsuarios = new javax.swing.JPanel();
        panelGestionUsuario = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_GestionUsuarios = new javax.swing.JTable();
        panel_BotonesGestionUsuarios = new javax.swing.JPanel();
        boton_modificar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        mostrar_mostrarDatos = new javax.swing.JPanel();
        comboxElegir = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_idUsuario = new javax.swing.JTextField();
        txt_contraseña = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Gesrionar Usuarios");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel_fondoGestionarUsuarios.setBackground(java.awt.Color.white);
        panel_fondoGestionarUsuarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelGestionUsuario.setBackground(new java.awt.Color(255, 255, 255));
        panelGestionUsuario.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table_GestionUsuarios.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        table_GestionUsuarios.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        table_GestionUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID usuario", "Contraseña", "Cargo"
            }
        ));
        jScrollPane1.setViewportView(table_GestionUsuarios);

        panelGestionUsuario.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 570, 120));

        panel_fondoGestionarUsuarios.add(panelGestionUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 570, 140));

        panel_BotonesGestionUsuarios.setBackground(new java.awt.Color(255, 255, 255));

        boton_modificar.setText("Actualizar");
        boton_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_modificarActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_BotonesGestionUsuariosLayout = new javax.swing.GroupLayout(panel_BotonesGestionUsuarios);
        panel_BotonesGestionUsuarios.setLayout(panel_BotonesGestionUsuariosLayout);
        panel_BotonesGestionUsuariosLayout.setHorizontalGroup(
            panel_BotonesGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BotonesGestionUsuariosLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_BotonesGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boton_modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        panel_BotonesGestionUsuariosLayout.setVerticalGroup(
            panel_BotonesGestionUsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_BotonesGestionUsuariosLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(boton_modificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        panel_fondoGestionarUsuarios.add(panel_BotonesGestionUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, 160, -1));

        mostrar_mostrarDatos.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout mostrar_mostrarDatosLayout = new javax.swing.GroupLayout(mostrar_mostrarDatos);
        mostrar_mostrarDatos.setLayout(mostrar_mostrarDatosLayout);
        mostrar_mostrarDatosLayout.setHorizontalGroup(
            mostrar_mostrarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        mostrar_mostrarDatosLayout.setVerticalGroup(
            mostrar_mostrarDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 110, Short.MAX_VALUE)
        );

        panel_fondoGestionarUsuarios.add(mostrar_mostrarDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 800, 110));

        comboxElegir.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));
        panel_fondoGestionarUsuarios.add(comboxElegir, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 160, -1, -1));

        jLabel1.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel1.setText("ID Usuario");
        panel_fondoGestionarUsuarios.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, -1, -1));

        jLabel2.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel2.setText("Contraseña ");
        panel_fondoGestionarUsuarios.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 160, -1, -1));
        panel_fondoGestionarUsuarios.add(txt_idUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 140, -1));
        panel_fondoGestionarUsuarios.add(txt_contraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 160, 207, -1));

        jLabel6.setFont(new java.awt.Font("Roboto", 0, 14)); // NOI18N
        jLabel6.setText("Cargo");
        panel_fondoGestionarUsuarios.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        getContentPane().add(panel_fondoGestionarUsuarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 780, 240));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boton_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_modificarActionPerformed
        if (!txt_idUsuario.getText().isEmpty()) {
            Usuario usuario = new Usuario();
            Ctrl_Usuario controusuario = new Ctrl_Usuario();

            usuario.setIdUsuario(Integer.parseInt(txt_idUsuario.getText().trim()));
            usuario.setPassword(txt_contraseña.getText().trim());
            usuario.setIdcargo(Integer.parseInt(comboxElegir.getSelectedItem().toString()));
            if (controusuario.modificarUsuario(usuario, idusuario)) {
                JOptionPane.showMessageDialog(null, "Linea modificada con éxito");
                txt_idUsuario.setText("");
                txt_contraseña.setText("");

                this.cargartablausuarios();
            } else {
                JOptionPane.showMessageDialog(null, "La usuario no se actualizó");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una usuario");
        }
    }//GEN-LAST:event_boton_modificarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // elimibnar
         if (!txt_idUsuario.getText().isEmpty()) {
            Usuario usuario = new Usuario();
            Ctrl_Usuario controlusuario = new Ctrl_Usuario();

            usuario.setIdUsuario(Integer.parseInt(txt_idUsuario.getText().trim()));
            usuario.setIdcargo(Integer.parseInt(comboxElegir.getSelectedItem().toString()));
            usuario.setPassword(txt_contraseña.getText().trim());
            if (controlusuario.elimiarUsuario(usuario.getIdUsuario())) { // Corregir aquí
                JOptionPane.showMessageDialog(null, "Línea eliminada correctamente");
                txt_idUsuario.setText("");
                txt_contraseña.setText("");
                this.cargartablausuarios();
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione una linea");
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_modificar;
    private javax.swing.JComboBox<String> comboxElegir;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel mostrar_mostrarDatos;
    private javax.swing.JPanel panelGestionUsuario;
    private javax.swing.JPanel panel_BotonesGestionUsuarios;
    private javax.swing.JPanel panel_fondoGestionarUsuarios;
    public static javax.swing.JTable table_GestionUsuarios;
    private javax.swing.JTextField txt_contraseña;
    private javax.swing.JTextField txt_idUsuario;
    // End of variables declaration//GEN-END:variables
// metodo para mostrar todas las usuarios
    private void cargartablausuarios() {
        Connection cn = conexion.Conexion.conectar();

        DefaultTableModel model = new DefaultTableModel();
        String sql = "SELECT * FROM usuario;";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            InternalFrame_GestionarUsuarios.table_GestionUsuarios = new JTable(model);
            InternalFrame_GestionarUsuarios.jScrollPane1.setViewportView(InternalFrame_GestionarUsuarios.table_GestionUsuarios);

            model.addColumn("Id_usuario");
            model.addColumn("Contraseña");
            model.addColumn("Cargo");

            while (rs.next()) {

                Object fila[] = new Object[3];

                for (int i = 0; i < 3; i++) {
                    fila[i] = rs.getObject(i + 1);

                }
                model.addRow(fila);

            }
            cn.close();

        } catch (SQLException e) {

            System.out.println("Error al llenar la tabla usuarios" + e);
        }

        table_GestionUsuarios.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int fila_point = table_GestionUsuarios.rowAtPoint(e.getPoint());
                int columna_point = 0;

                if (fila_point > -1) {
                    idusuario = (int) model.getValueAt(fila_point, columna_point);
                    EnviarDatosUsuarioSeleccionado(idusuario);
                }
            }
        });

    }

    private void EnviarDatosUsuarioSeleccionado(int idusuario) {
        try {
            Connection cno = conexion.Conexion.conectar();
            PreparedStatement pst = cno.prepareStatement("SELECT * FROM usuario WHERE id_usuario= '" + idusuario + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txt_idUsuario.setText(rs.getString("id_usuario"));
                txt_contraseña.setText(rs.getString("password"));
                comboxElegir.setSelectedItem(rs.getString("id_cargo"));

            }
            cno.close();

        } catch (SQLException e) {

            System.err.println("Error cargar categoria" + e);
        }
    }

}
